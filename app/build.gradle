apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "androidx.navigation.safeargs.kotlin"

apply plugin: 'kotlin-noarg'

apply plugin: 'kotlin-allopen'

apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion 31
   // buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "cn.lxyhome.jetpackcamerax"
        minSdkVersion 25
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions { jvmTarget = 1.8 }

    sourceSets {
        main {
            proto {
                srcDir 'src/main/proto'
                include '**/*.proto'
            }
        }
    }


}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    def appcompat_version = "1.4.0"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0-beta01'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    implementation 'com.tencent.bugly:crashreport:3.1.0'
   // implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation 'com.squareup.okhttp3:okhttp:4.7.2'


    //WindowManager
    implementation 'androidx.window:window:1.0.0-alpha09'

    def paging_version = "2.1.2"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"


    // CameraX core library using the camera2 implementation
    //   def camerax_version = "1.0.0-alpha10"
    def camerax_version = "1.1.0-alpha03"
    implementation "androidx.camera:camera-core:${camerax_version}"
    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // If you want to use the CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha23"
    // If you want to use the CameraX Extensions library
    implementation "androidx.camera:camera-extensions:1.0.0-alpha23"
    // If you want to use the CameraX Lifecycle library
    implementation "androidx.camera:camera-lifecycle:${camerax_version}"

    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5'


    def lifecycle_version = "2.3.1"

    // ViewModel
    //noinspection GradleDependency
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    //noinspection GradleDependency
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    //noinspection GradleDependency
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    //noinspection LifecycleAnnotationProcessorWithJava8
    implementation 'androidx.annotation:annotation:1.3.0'
    //noinspection LifecycleAnnotationProcessorWithJava8
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    //noinspection GradleDependency
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version"


    def nav_version = "2.3.5"

    /* // Java language implementation
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"*/

    // Kotlin
   // implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
   // implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Dynamic Feature Module Support
    //noinspection GradleDependency
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"


    def room_version = "2.2.6"

    //noinspection GradleDependency
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    //noinspection GradleDependency
    implementation "androidx.room:room-ktx:$room_version"

    /*// optional - RxJava support for Room
    implementation "androidx.room:room-rxjava2:$room_version"*/

    // optional - Guava support for Room, including Optional and ListenableFuture
    //noinspection GradleDependency
    implementation "androidx.room:room-guava:$room_version"

    def work_version = "2.5.0"
    // (Java only)
  //  implementation "androidx.work:work-runtime:$work_version"

    // Kotlin + coroutines
    //noinspection GradleDependency
    implementation "androidx.work:work-runtime-ktx:$work_version"

    // optional - RxJava2 support
   // implementation "androidx.work:work-rxjava2:$work_version"

    // optional - GCMNetworkManager support
    //noinspection GradleDependency
    implementation "androidx.work:work-gcm:$work_version"

    // optional - Test helpers
   // androidTestImplementation "androidx.work:work-testing:$work_version"


    implementation 'androidx.palette:palette-ktx:1.0.0'//调色板
    implementation 'androidx.emoji:emoji:1.1.0'//表情

    implementation 'com.google.android.material:material:1.3.0'//material


    // Preferences DataStore
    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha08"

    // Proto DataStore
    implementation "androidx.datastore:datastore-core:1.0.0-alpha08"

    // protobuf
    implementation  "com.google.protobuf:protobuf-javalite:3.11.0"
}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}



noArg {
    annotation("cn.lxyhome.jetpackcamerax.dao.entity")//"aaa.bbb.ccc.ddd为模拟包名"
}

allOpen {
    annotation("cn.lxyhome.jetpackcamerax.dao.entity")
}
